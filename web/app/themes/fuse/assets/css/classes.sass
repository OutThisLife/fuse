@charset "UTF-8"
// â™«

$medium: 64em
$small: 40.063em

// -----------------------------------------------

@function rem($size)
	$remSize: $size / 16
	@return #{$remSize}rem

@function make-random($min, $max)
	@return random($max) + $min

=font-size($size)
	font-size: #{$size}px
	font-size: rem($size)

@function tracking($points: 100)
	$tracking: $points / 1000
	@return #{$tracking}em

@function str-replace($string, $search, $replace: '')
	$index: str-index($string, $search)

	@if $index
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace)

	@return $string

=fontFace($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg)
	$src: null

	$extmods: ( eot: '?', svg: '#' + str-replace($name, ' ', '_') )
	$formats: ( otf: 'opentype', ttf: 'truetype' )

	@each $ext in $exts
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext)
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext)
		$src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma)

	@font-face
		font-family: quote($name)
		font-style: $style
		font-weight: $weight
		src: $src

// -----------------------------------------------

=backgroundSize($type)
	background-size: $type
	-khtml-background-size: $type
	-webkit-background-size: $type
	-moz-background-size: $type
	-ms-background-size: $type
	-o-background-size: $type

.full-bg
	background: center no-repeat
	+backgroundSize(cover)

=backgroundClip($type)
	-webkit-background-clip: $type
	-moz-background-clip: $type
	background-clip: $type

=linearGradient($from, $to, $img: 0, $dist: 50)
	background: $from

	@if $img != 0
		background-image: url(../images/#{$img}), -webkit-gradient(linear, 0 0, 0 $dist, from($from), to($to))
		background-image: url(../images/#{$img}), -moz-linear-gradient($from, $to)

	@if $img == 0
		background-image: -webkit-gradient(linear, 0 0, 0 $dist, from($from), to($to))
		background-image: -moz-linear-gradient($from, $to)

=smartGradient($base, $flipped: false)
	$from: lighten($base, 2)
	$to: darken($base, 2)

	background: $base

	@if $flipped == false
		background-image: -webkit-gradient(linear, 0 0, 0 50, from($from), to($to))
		background-image: -moz-linear-gradient($from, $to)

	@else
		background-image: -webkit-gradient(linear, 0 0, 0 50, from($to), to($from))
		background-image: -moz-linear-gradient($to, $from)

=transparentBG($colour, $alpha)
	$rgba: rgba($colour, $alpha)
	$ie: ie-hex-str($rgba)

	zoom: 1
	background-color: transparent
	background-color: $rgba
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie},endColorstr=#{$ie})

=transparentColour($colour, $alpha)
	color: $colour
	color: rgba($colour, $alpha)

// -----------------------------------------------

=textShadow($string)
	text-shadow: $string
	-khtml-text-shadow: $string
	-webkit-text-shadow: $string
	-moz-text-shadow: $string
	-ms-text-shadow: $string
	-o-text-shadow: $string

=stroke($colour)
	text-shadow: -1px -1px 0 $colour, 1px -1px 0 $colour, -1px 1px 0 $colour, 1px 1px 0 $colour
	-khtml-text-shadow: -1px -1px 0 $colour, 1px -1px 0 $colour, -1px 1px 0 $colour, 1px 1px 0 $colour
	-webkit-text-shadow: -1px -1px 0 $colour, 1px -1px 0 $colour, -1px 1px 0 $colour, 1px 1px 0 $colour
	-moz-text-shadow: -1px -1px 0 $colour, 1px -1px 0 $colour, -1px 1px 0 $colour, 1px 1px 0 $colour
	-ms-text-shadow: -1px -1px 0 $colour, 1px -1px 0 $colour, -1px 1px 0 $colour, 1px 1px 0 $colour
	-o-text-shadow: -1px -1px 0 $colour, 1px -1px 0 $colour, -1px 1px 0 $colour, 1px 1px 0 $colour

=longShadow($colour, $size: 200)
	$shadows: 0px 0px $colour

	@for $i from 1 through $size
		$shadows: #{$shadows}, #{$i}px #{$i}px #{$colour}

	+textShadow($shadows)

// -----------------------------------------------

=boxShadow($string)
	box-shadow: $string
	-khtml-box-shadow: $string
	-webkit-box-shadow: $string
	-moz-box-shadow: $string
	-ms-box-shadow: $string
	-o-box-shadow: $string

// -----------------------------------------------

=transition($string)
	transition: $string
	-khtml-transition: $string
	-webkit-transition: $string
	-moz-transition: $string
	-ms-transition: $string
	-o-transition: $string

=transitionProperty($string)
	transition-property: $string
	-khtml-transition-property: $string
	-webkit-transition-property: $string
	-moz-transition-property: $string
	-ms-transition-property: $string
	-o-transition-property: $string

// -----------------------------------------------

=transform($type)
	transform: $type
	-khtml-transform: $type
	-webkit-transform: $type
	-moz-transform: $type
	-ms-transform: $type
	-o-transform: $type

=transformOrigin($origin)
	-webkit-transform-origin: $origin
	-moz-transform-origin: $origin
	-ms-transform-origin: $origin
	-o-transform-origin: $origin
	transform-origin: $origin

=perspective($perspective)
	-webkit-perspective: $perspective
	-moz-perspective: $perspective
	-ms-perspective: $perspective
	-o-perspective: $perspective
	perspective: $perspective

=hideBackface
	-webkit-backface-visibility: hidden
	-moz-backface-visibility: hidden
	-ms-backface-visibility: hidden
	backface-visibility: hidden

// -----------------------------------------------

=keyframes($name)
	@-webkit-keyframes #{$name}
		@content

	@-moz-keyframes #{$name}
		@content

	@keyframes #{$name}
		@content

=animation($string)
	animation: $string
	-webkit-animation: $string
	-khtml-animation: $string
	-moz-animation: $string
	-ms-animation: $string
	-o-animation: $string

.no-anim
	-webkit-transition: none !important
	-moz-transition: none !important
	-ms-transition: none !important
	-o-transition: none !important
	transition: none !important

// -----------------------------------------------

=opacity($alpha)
	$ie: $alpha * 100
	opacity: $alpha
	filter: alpha(opacity=$ie)

=filter($filter)
	-webkit-filter: $filter
	-moz-filter: $filter
	-ms-filter: $filter
	-o-filter: $filter
	filter: $filter

// -----------------------------------------------

=boxSizing($type)
	box-sizing: $type
	-khtml-box-sizing: $type
	-webkit-box-sizing: $type
	-moz-box-sizing: $type
	-ms-box-sizing: $type
	-o-box-sizing: $type

// -----------------------------------------------

=borderRadius($radius)
	border-radius: $radius
	-khtml-border-radius: $radius
	-webkit-border-radius: $radius
	-moz-border-radius: $radius
	-ms-border-radius: $radius
	-o-border-radius: $radius

=borderImage($string)
	-webkit-border-image: $string
	-moz-border-image: $string
	-o-border-image: $string
	border-image: $string

// -----------------------------------------------

=mask($source)
	mask-image: url("@{source")
	-khtml-mask-image: url("@{source")
	-webkit-mask-image: url("@{source")
	-moz-mask-image: url("@{source")
	-ms-mask-image: url("@{source")
	-o-mask-image: url("@{source")

// -----------------------------------------------

=columns($len)
	columns: $len
	-khtml-columns: $len
	-webkit-columns: $len
	-moz-columns: $len
	-ms-columns: $len
	-o-columns: $len

=columnCount($len)
	column-count: $len
	-khtml-column-count: $len
	-webkit-column-count: $len
	-moz-column-count: $len
	-ms-column-count: $len
	-o-column-count: $len

=columnGap($gap)
	column-gap: $gap
	-khtml-column-gap: $gap
	-webkit-column-gap: $gap
	-moz-column-gap: $gap
	-ms-column-gap: $gap
	-o-column-gap: $gap

// -----------------------------------------------

=imageBlock($width, $height, $source, $display: block)
	display: $display
	width: $width
	height: $height
	text-indent: -999em
	text-align: left !important
	background: url(../images/#{$source}) no-repeat

// -----------------------------------------------

=inputs
	input:not([type]):not([readonly]),
	input[type=date]:not([readonly]),
	input[type=datetime-local]:not([readonly]),
	input[type=email]:not([readonly]),
	input[type=number]:not([readonly]),
	input[type=password]:not([readonly]),
	input[type=search]:not([readonly]),
	input[type=tel]:not([readonly]),
	input[type=text]:not([readonly]),
	input[type=time]:not([readonly]),
	input[type=url]:not([readonly]),
	input[type=phone]:not([readonly]),
	textarea:not([readonly]), select:not([readonly])
		@content

		+colourPlaceholder
			color: #999

// -----------------------------------------------

=userSelect($type)
	user-select: $type
	-khtml-user-select: $type
	-webkit-user-select: $type
	-webkit-touch-callout: $type
	-moz-user-select: $type
	-ms-user-select: $type
	-o-user-select: $type

=hyphen($type)
	hyphen: $type
	-webkit-hyphen: $type
	-moz-hyphen: $type
	-ms-hyphen: $type
	-o-hyphen: $type

=colourSelection($el: "*")
	#{$el}::selection
		@content

	#{$el}::-khtml-selection
		@content

	#{$el}::-webkit-selection
		@content

	#{$el}::-moz-selection
		@content

	#{$el}::-ms-selection
		@content

	#{$el}::-o-selection
		@content

=colourPlaceholder()
	&::-webkit-input-placeholder
		@content

	&:-moz-placeholder
		@content

	&::-moz-placeholder
		@content

	&:-ms-input-placeholder
		@content

// -----------------------------------------------

=clearfix
	zoom: 1

	&:after, &:before
		content: '\0020'
		display: table
		height: 0
		overflow: hidden

	&:after
		clear: both

.cls
	clear: both

.clearfix
	+clearfix

// -----------------------------------------------

=sq($dim)
	width: $dim
	height: $dim

.full-height
	height: 100%

.full-width
	width: 100%

// -----------------------------------------------

=cover($pos: absolute, $dist: 0)
	position: $pos
	left: $dist
	right: $dist
	bottom: $dist
	top: $dist

.cover
	+cover

.is-fixed
	position: fixed

.is-static
	position: static

.table.cover,
.table.cover > .cell
	+sq(100%)

// -----------------------------------------------

.center
	position: absolute
	left: 50%
	top: 50%
	+transform(translate(-50%, -50%))

.centerY
	position: absolute
	top: 50%
	+transform(translate(0, -50%))

.centerX
	position: absolute
	left: 50%
	+transform(translate(-50%, 0))

// -----------------------------------------------

=media($type)
	@if $type == tablet
		@media only screen and (min-device-width: 767px) and (max-device-width: 1024px)
			@content

	@else if $type == tabletPortrait
		@media only screen and (min-device-width: 767px) and (max-device-width: 1024px) and (orientation: portrait)
			@content

	@else if $type == tabletLandscape
		@media only screen and (min-device-width: 767px) and (max-device-width: 1024px) and (orientation: landscape)
			@content

	@else if $type == mobile
		@media only screen and (max-device-width: 767px)
			@content

	@else if $type == mobilePortrait
		@media only screen and (max-device-width: 767px) and (orientation: portrait)
			@content

	@else if $type == mobileLandscape
		@media only screen and (max-device-width: 767px) and (orientation: landscape)
			@content

	@else if $type == retina
		@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dip)
			@content

// -----------------------------------------------

$easeInCubic: cubic-bezier(0.550, 0.055, 0.675, 0.190)
$easeOutCubic: cubic-bezier(0.215, 0.610, 0.355, 1.000)
$easeInOutCubic: cubic-bezier(0.645, 0.045, 0.355, 1.000)

$easeInCirc: cubic-bezier(0.600, 0.040, 0.980, 0.335)
$easeOutCirc: cubic-bezier(0.075, 0.820, 0.165, 1.000)
$easeInOutCirc: cubic-bezier(0.785, 0.135, 0.150, 0.860)

$easeInExpo: cubic-bezier(0.950, 0.050, 0.795, 0.035)
$easeOutExpo: cubic-bezier(0.190, 1.000, 0.220, 1.000)
$easeInOutExpo: cubic-bezier(1.000, 0.000, 0.000, 1.000)

$easeInQuad: cubic-bezier(0.550, 0.085, 0.680, 0.530)
$easeOutQuad: cubic-bezier(0.250, 0.460, 0.450, 0.940)
$easeInOutQuad: cubic-bezier(0.455, 0.030, 0.515, 0.955)

$easeInQuart: cubic-bezier(0.895, 0.030, 0.685, 0.220)
$easeOutQuart: cubic-bezier(0.165, 0.840, 0.440, 1.000)
$easeInOutQuart: cubic-bezier(0.770, 0.000, 0.175, 1.000)

$easeInQuint: cubic-bezier(0.755, 0.050, 0.855, 0.060)
$easeOutQuint: cubic-bezier(0.230, 1.000, 0.320, 1.000)
$easeInOutQuint: cubic-bezier(0.860, 0.000, 0.070, 1.000)

$easeInSine: cubic-bezier(0.470, 0.000, 0.745, 0.715)
$easeOutSine: cubic-bezier(0.390, 0.575, 0.565, 1.000)
$easeInOutSine: cubic-bezier(0.445, 0.050, 0.550, 0.950)

$easeInBack: cubic-bezier(0.600, -0.280, 0.735, 0.045)
$easeOutBack: cubic-bezier(0.175, 0.885, 0.320, 1.275)
$easeInOutBack: cubic-bezier(0.680, -0.550, 0.265, 1.550)

// -----------------------------------------------

[class*="grid-"]
	+clearfix

	.item
		float: left

		@media (max-width: $small)
			width: 100% !important
			margin: auto
			text-align: center

			*
				text-align: center !important

	@for $i from 1 to 10
		&.grid-#{$i} .item
			width: 100% / $i

	@media (max-width: $small)
		width: 100%

// -----------------------------------------------

body
	text-rendering: optimizeLegibility
	font-smoothing: antialised
	-webkit-font-smoothing: antialised
	-moz-font-smoothing: antialised
	-moz-text-size-adjust: 100%
	-ms-text-size-adjust: 100%
	text-size-adjust: 100%

*
	+boxSizing(border-box)

q:before
	content: "\201C"

q:after
	content: "\201D"

nav
	+sq(auto)
	padding: 0
	+boxShadow(none)
	background: none

	ul li
		float: none

		&:hover
			background: none

		a
			padding: 0

// -----------------------------------------------

.wf-loading
	visibility: hidden !important

[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak
	display: none !important

// -----------------------------------------------

.table
	display: table
	text-align: center

.cell
	display: table-cell
	vertical-align: middle

.alignleft
	float: left
	margin: 0 15px 15px 0

.alignright
	float: right
	margin: 0 0 15px 15px

.aligncenter
	display: block
	margin: auto

// -----------------------------------------------

.gm-style *
	max-width: none
	+boxSizing(content-box)

.unreverse
	direction: rtl
	unicode-bidi: bidi-override

// -----------------------------------------------

.hide
	display: none

.hide-for-small
	@media (max-width: $small)
		display: none !important

.show-for-small
	display: none !important

	@media (max-width: $small)
		display: block !important

.invisible
	visibility: hidden